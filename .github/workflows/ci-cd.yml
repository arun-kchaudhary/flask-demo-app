name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        run: terraform apply -auto-approve

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: setup-infrastructure
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        run: |
          docker build -t flask-demo-app .
          docker tag flask-demo-app:latest ${{ steps.ecr-login.outputs.registry }}/${{ github.repository }}:latest
          docker push ${{ steps.ecr-login.outputs.registry }}/${{ github.repository }}:latest

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name $(terraform output -raw eks_cluster_name)

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

